When would you want to create a remote repository rather than keep all your work local?
When files/projects start to get large then it may not be a good idea to keep everything local. Having a remote repository allows you to access
your work anywhere.

Why might you want to always pull changes manually rather than having
Git automatically stay up-to-date with your remote repository?
Beacause your local repository may have changes that your remote repository may not have. Or vice versa. You would not want your remote 
and local repositories to auto-lync because you don't want to lose work that you have done. 

Describe the differences between forks, clones, and branches. When would you use one instead of another?
Branches act on repositories and create different commit paths in
the repository.  Clones are copies of existing repositories.  A
fork is a clone of someone else's remote repository that goes directly to your remote repository (on GitHub).

What is the benefit of having a copy of the last known state of the
remote stored locally?
IF the repository is public then it may have been changed by someone other than you.  This way if you make changes on your local repository and you want to compare or merge then you can. 

How would you collaborate without using Git or GitHub? What would be
easier, and what would be harder?
If I did not have GitHub than I would probably have to correspond by email or some other shared repository like Google Drive.  THis would 
make it ALOT harder and cumbersome to keep up with all of the changes made.  